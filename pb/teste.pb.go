// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc-api/pb/teste.proto

package testepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Teste struct {
	Nome                 string   `protobuf:"bytes,1,opt,name=nome,proto3" json:"nome,omitempty"`
	Sobrenome            string   `protobuf:"bytes,2,opt,name=sobrenome,proto3" json:"sobrenome,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Teste) Reset()         { *m = Teste{} }
func (m *Teste) String() string { return proto.CompactTextString(m) }
func (*Teste) ProtoMessage()    {}
func (*Teste) Descriptor() ([]byte, []int) {
	return fileDescriptor_f711b483cf425629, []int{0}
}

func (m *Teste) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Teste.Unmarshal(m, b)
}
func (m *Teste) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Teste.Marshal(b, m, deterministic)
}
func (m *Teste) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Teste.Merge(m, src)
}
func (m *Teste) XXX_Size() int {
	return xxx_messageInfo_Teste.Size(m)
}
func (m *Teste) XXX_DiscardUnknown() {
	xxx_messageInfo_Teste.DiscardUnknown(m)
}

var xxx_messageInfo_Teste proto.InternalMessageInfo

func (m *Teste) GetNome() string {
	if m != nil {
		return m.Nome
	}
	return ""
}

func (m *Teste) GetSobrenome() string {
	if m != nil {
		return m.Sobrenome
	}
	return ""
}

type TesteRequest struct {
	Teste                *Teste   `protobuf:"bytes,1,opt,name=teste,proto3" json:"teste,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TesteRequest) Reset()         { *m = TesteRequest{} }
func (m *TesteRequest) String() string { return proto.CompactTextString(m) }
func (*TesteRequest) ProtoMessage()    {}
func (*TesteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f711b483cf425629, []int{1}
}

func (m *TesteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TesteRequest.Unmarshal(m, b)
}
func (m *TesteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TesteRequest.Marshal(b, m, deterministic)
}
func (m *TesteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TesteRequest.Merge(m, src)
}
func (m *TesteRequest) XXX_Size() int {
	return xxx_messageInfo_TesteRequest.Size(m)
}
func (m *TesteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TesteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TesteRequest proto.InternalMessageInfo

func (m *TesteRequest) GetTeste() *Teste {
	if m != nil {
		return m.Teste
	}
	return nil
}

type TesteResponse struct {
	Resultado            string   `protobuf:"bytes,1,opt,name=resultado,proto3" json:"resultado,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TesteResponse) Reset()         { *m = TesteResponse{} }
func (m *TesteResponse) String() string { return proto.CompactTextString(m) }
func (*TesteResponse) ProtoMessage()    {}
func (*TesteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f711b483cf425629, []int{2}
}

func (m *TesteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TesteResponse.Unmarshal(m, b)
}
func (m *TesteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TesteResponse.Marshal(b, m, deterministic)
}
func (m *TesteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TesteResponse.Merge(m, src)
}
func (m *TesteResponse) XXX_Size() int {
	return xxx_messageInfo_TesteResponse.Size(m)
}
func (m *TesteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TesteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TesteResponse proto.InternalMessageInfo

func (m *TesteResponse) GetResultado() string {
	if m != nil {
		return m.Resultado
	}
	return ""
}

func init() {
	proto.RegisterType((*Teste)(nil), "teste.Teste")
	proto.RegisterType((*TesteRequest)(nil), "teste.TesteRequest")
	proto.RegisterType((*TesteResponse)(nil), "teste.TesteResponse")
}

func init() { proto.RegisterFile("rpc-api/pb/teste.proto", fileDescriptor_f711b483cf425629) }

var fileDescriptor_f711b483cf425629 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x2a, 0x48, 0xd6,
	0x4d, 0x2c, 0xc8, 0xd4, 0x2f, 0x48, 0xd2, 0x2f, 0x49, 0x2d, 0x2e, 0x49, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x2c, 0xb9, 0x58, 0x43, 0x40, 0x0c, 0x21, 0x21, 0x2e,
	0x96, 0xbc, 0xfc, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x48, 0x86,
	0x8b, 0xb3, 0x38, 0x3f, 0xa9, 0x28, 0x15, 0x2c, 0xc1, 0x04, 0x96, 0x40, 0x08, 0x28, 0x19, 0x71,
	0xf1, 0x80, 0xb5, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x29, 0x71, 0x41, 0xcc, 0x04,
	0x1b, 0xc1, 0x6d, 0xc4, 0xa3, 0x07, 0xb1, 0x0e, 0xa2, 0x06, 0x6a, 0x9d, 0x2e, 0x17, 0x2f, 0x54,
	0x4f, 0x71, 0x41, 0x7e, 0x5e, 0x31, 0xd8, 0x8a, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x92, 0xc4, 0x94,
	0x7c, 0xa8, 0xdd, 0x08, 0x01, 0x23, 0x17, 0xa8, 0x15, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9,
	0x42, 0x26, 0x30, 0xd7, 0x0a, 0xa3, 0x18, 0x0e, 0x71, 0x80, 0x94, 0x08, 0xaa, 0x20, 0xc4, 0x06,
	0x25, 0x06, 0x27, 0xce, 0x28, 0x76, 0xb0, 0x44, 0x41, 0x52, 0x12, 0x1b, 0xd8, 0xf3, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0x4b, 0xa9, 0xdc, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TesteServiceClient is the client API for TesteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TesteServiceClient interface {
	Teste(ctx context.Context, in *TesteRequest, opts ...grpc.CallOption) (*TesteResponse, error)
}

type testeServiceClient struct {
	cc *grpc.ClientConn
}

func NewTesteServiceClient(cc *grpc.ClientConn) TesteServiceClient {
	return &testeServiceClient{cc}
}

func (c *testeServiceClient) Teste(ctx context.Context, in *TesteRequest, opts ...grpc.CallOption) (*TesteResponse, error) {
	out := new(TesteResponse)
	err := c.cc.Invoke(ctx, "/teste.TesteService/Teste", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TesteServiceServer is the server API for TesteService service.
type TesteServiceServer interface {
	Teste(context.Context, *TesteRequest) (*TesteResponse, error)
}

func RegisterTesteServiceServer(s *grpc.Server, srv TesteServiceServer) {
	s.RegisterService(&_TesteService_serviceDesc, srv)
}

func _TesteService_Teste_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TesteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TesteServiceServer).Teste(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teste.TesteService/Teste",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TesteServiceServer).Teste(ctx, req.(*TesteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TesteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "teste.TesteService",
	HandlerType: (*TesteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Teste",
			Handler:    _TesteService_Teste_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc-api/pb/teste.proto",
}
